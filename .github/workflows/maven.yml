# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package
    
      #Build the application using Maven
      - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
        uses: actions/upload-artifact@v2
        with:
          #Set artifact name
          name: artifact
          #From this path
          path: target/cicd-demo-0.0.1-SNAPSHOT.jar
          
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: "20"
          distribution: "temurin"
          cache: maven
      - name: Run Test with Maven
        # run: mvn -B test
        run: mvn -B -Dmaven.test.failure.ignore=true test

  sonar:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: "20"
          distribution: "temurin"
          cache: maven
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze on SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=salwhite_cicd-demo

  deploy:
    name: Deploy
    # Depends on the 'build' job
    needs: build
    # Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Source Codes
        uses: actions/checkout@v3
        with:
          name: artifact
          path: target/cicd-demo
          
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v13
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          use_existing_version_if_available: false
          application_name: Spring-Boot-DataRest
          environment_name: Spring-Boot-DataRest-env
          version_label: ${{ github.sha }}
          region: ap-southeast-2
          deployment_package: cicd-demo-0.0.1-SNAPSHOT.jar
                             
    
